/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableSet$Builder
 *  it.unimi.dsi.fastutil.objects.Object2ObjectMap
 *  net.minecraft.block.Block
 *  net.minecraft.block.Blocks
 *  net.minecraft.client.world.DimensionRenderInfo
 *  net.minecraft.client.world.DimensionRenderInfo$FogType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.vector.Vector3d
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.gen.carver.WorldCarver
 *  net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.fml.DeferredWorkQueue
 *  net.minecraftforge.fml.common.ObfuscationReflectionHelper
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.registries.ForgeRegistries
 */
package net.mcreator.gallifreyworlds.world.dimension;

import com.google.common.collect.ImmutableSet;
import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
import java.util.HashSet;
import java.util.Set;
import net.mcreator.gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.client.world.DimensionRenderInfo;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.vector.Vector3d;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.carver.WorldCarver;
import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.fml.DeferredWorkQueue;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class WorldTatooineDimension
extends GallifreyWorldsModElements.ModElement {
    public WorldTatooineDimension(GallifreyWorldsModElements instance) {
        super(instance, 3);
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
        HashSet<Block> replaceableBlocks = new HashSet<Block>();
        replaceableBlocks.add(Blocks.field_150354_m);
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:tatooine_desert"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:tatooine_desert"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        DeferredWorkQueue.runLater(() -> {
            try {
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    @OnlyIn(value=Dist.CLIENT)
    public void clientLoad(FMLClientSetupEvent event) {
        DimensionRenderInfo customEffect = new DimensionRenderInfo(128.0f, true, DimensionRenderInfo.FogType.NORMAL, false, false){

            public Vector3d func_230494_a_(Vector3d color, float sunHeight) {
                return color.func_216372_d((double)sunHeight * 0.94 + 0.06, (double)sunHeight * 0.94 + 0.06, (double)sunHeight * 0.91 + 0.09);
            }

            public boolean func_230493_a_(int x, int y) {
                return false;
            }
        };
        DeferredWorkQueue.runLater(() -> {
            try {
                Object2ObjectMap effectsRegistry = (Object2ObjectMap)ObfuscationReflectionHelper.getPrivateValue(DimensionRenderInfo.class, null, (String)"field_239208_a_");
                effectsRegistry.put((Object)new ResourceLocation("gallifrey_worlds:world_tatooine"), (Object)customEffect);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Blocks
 *  net.minecraft.entity.EntityClassification
 *  net.minecraft.entity.EntityType
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.biome.Biome$Builder
 *  net.minecraft.world.biome.Biome$Category
 *  net.minecraft.world.biome.Biome$RainType
 *  net.minecraft.world.biome.BiomeAmbience
 *  net.minecraft.world.biome.BiomeAmbience$Builder
 *  net.minecraft.world.biome.BiomeGenerationSettings$Builder
 *  net.minecraft.world.biome.DefaultBiomeFeatures
 *  net.minecraft.world.biome.MobSpawnInfo$Builder
 *  net.minecraft.world.biome.MobSpawnInfo$Spawners
 *  net.minecraft.world.gen.feature.structure.StructureFeatures
 *  net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilder
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 */
package net.mcreator.gallifreyworlds.world.biome;

import net.mcreator.gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Blocks;
import net.minecraft.entity.EntityClassification;
import net.minecraft.entity.EntityType;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.BiomeAmbience;
import net.minecraft.world.biome.BiomeGenerationSettings;
import net.minecraft.world.biome.DefaultBiomeFeatures;
import net.minecraft.world.biome.MobSpawnInfo;
import net.minecraft.world.gen.feature.structure.StructureFeatures;
import net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilder;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;

@GallifreyWorldsModElements.ModElement.Tag
public class TatooineBiome
extends GallifreyWorldsModElements.ModElement {
    public static Biome biome;

    public TatooineBiome(GallifreyWorldsModElements instance) {
        super(instance, 1);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new BiomeRegisterHandler());
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
    }

    private static class BiomeRegisterHandler {
        private BiomeRegisterHandler() {
        }

        @SubscribeEvent
        public void registerBiomes(RegistryEvent.Register<Biome> event) {
            if (biome == null) {
                BiomeAmbience effects = new BiomeAmbience.Builder().func_235239_a_(-13210).func_235246_b_(4159204).func_235248_c_(329011).func_242539_d(-13210).func_242540_e(10387789).func_242541_f(9470285).func_235238_a_();
                BiomeGenerationSettings.Builder biomeGenerationSettings = new BiomeGenerationSettings.Builder().func_242517_a(SurfaceBuilder.field_215396_G.func_242929_a((ISurfaceBuilderConfig)new SurfaceBuilderConfig(Blocks.field_150354_m.func_176223_P(), Blocks.field_150354_m.func_176223_P(), Blocks.field_196585_ak.func_176223_P())));
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244155_u);
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244143_i);
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244152_r);
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244150_p);
                DefaultBiomeFeatures.func_243738_d((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                DefaultBiomeFeatures.func_243750_j((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                MobSpawnInfo.Builder mobSpawnInfo = new MobSpawnInfo.Builder().func_242571_a();
                mobSpawnInfo.func_242575_a(EntityClassification.MONSTER, new MobSpawnInfo.Spawners(EntityType.field_200725_aD, 20, 4, 4));
                biome = new Biome.Builder().func_205415_a(Biome.RainType.RAIN).func_205419_a(Biome.Category.DESERT).func_205421_a(0.1f).func_205420_b(0.2f).func_205414_c(0.5f).func_205417_d(0.5f).func_235097_a_(effects).func_242458_a(mobSpawnInfo.func_242577_b()).func_242457_a(biomeGenerationSettings.func_242508_a()).func_242455_a();
                event.getRegistry().register(biome.setRegistryName("gallifrey_worlds:tatooine_desert"));
            }
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Block
 *  net.minecraft.enchantment.Enchantment
 *  net.minecraft.entity.EntityType
 *  net.minecraft.item.Item
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.SoundEvent
 *  net.minecraftforge.common.MinecraftForge
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.common.Mod
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.event.server.FMLServerStartingEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 *  net.minecraftforge.fml.network.NetworkRegistry
 *  net.minecraftforge.fml.network.simple.SimpleChannel
 *  net.minecraftforge.registries.IForgeRegistryEntry
 *  org.apache.logging.log4j.LogManager
 *  org.apache.logging.log4j.Logger
 */
package net.mcreator.gallifreyworlds;

import java.util.function.Supplier;
import net.mcreator.gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Block;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.entity.EntityType;
import net.minecraft.item.Item;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.server.FMLServerStartingEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.fml.network.NetworkRegistry;
import net.minecraftforge.fml.network.simple.SimpleChannel;
import net.minecraftforge.registries.IForgeRegistryEntry;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

@Mod(value="gallifrey_worlds")
public class GallifreyWorldsMod {
    public static final Logger LOGGER = LogManager.getLogger(GallifreyWorldsMod.class);
    private static final String PROTOCOL_VERSION = "1";
    public static final SimpleChannel PACKET_HANDLER = NetworkRegistry.newSimpleChannel((ResourceLocation)new ResourceLocation("gallifrey_worlds", "gallifrey_worlds"), () -> "1", "1"::equals, "1"::equals);
    public GallifreyWorldsModElements elements = new GallifreyWorldsModElements();

    public GallifreyWorldsMod() {
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)this);
        FMLJavaModLoadingContext.get().getModEventBus().addListener(this::init);
        FMLJavaModLoadingContext.get().getModEventBus().addListener(this::clientLoad);
        MinecraftForge.EVENT_BUS.register((Object)new GallifreyWorldsModFMLBusEvents(this));
    }

    private void init(FMLCommonSetupEvent event) {
        this.elements.getElements().forEach(element -> element.init(event));
    }

    public void clientLoad(FMLClientSetupEvent event) {
        this.elements.getElements().forEach(element -> element.clientLoad(event));
    }

    @SubscribeEvent
    public void registerBlocks(RegistryEvent.Register<Block> event) {
        event.getRegistry().registerAll((IForgeRegistryEntry[])this.elements.getBlocks().stream().map(Supplier::get).toArray(Block[]::new));
    }

    @SubscribeEvent
    public void registerItems(RegistryEvent.Register<Item> event) {
        event.getRegistry().registerAll((IForgeRegistryEntry[])this.elements.getItems().stream().map(Supplier::get).toArray(Item[]::new));
    }

    @SubscribeEvent
    public void registerEntities(RegistryEvent.Register<EntityType<?>> event) {
        event.getRegistry().registerAll((IForgeRegistryEntry[])this.elements.getEntities().stream().map(Supplier::get).toArray(EntityType[]::new));
    }

    @SubscribeEvent
    public void registerEnchantments(RegistryEvent.Register<Enchantment> event) {
        event.getRegistry().registerAll((IForgeRegistryEntry[])this.elements.getEnchantments().stream().map(Supplier::get).toArray(Enchantment[]::new));
    }

    @SubscribeEvent
    public void registerSounds(RegistryEvent.Register<SoundEvent> event) {
        this.elements.registerSounds(event);
    }

    private static class GallifreyWorldsModFMLBusEvents {
        private final GallifreyWorldsMod parent;

        GallifreyWorldsModFMLBusEvents(GallifreyWorldsMod parent) {
            this.parent = parent;
        }

        @SubscribeEvent
        public void serverLoad(FMLServerStartingEvent event) {
            this.parent.elements.getElements().forEach(element -> element.serverLoad(event));
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Block
 *  net.minecraft.enchantment.Enchantment
 *  net.minecraft.entity.EntityType
 *  net.minecraft.item.Item
 *  net.minecraft.network.PacketBuffer
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.SoundEvent
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.fml.ModList
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.event.server.FMLServerStartingEvent
 *  net.minecraftforge.fml.network.NetworkEvent$Context
 *  net.minecraftforge.forgespi.language.ModFileScanData
 *  net.minecraftforge.forgespi.language.ModFileScanData$AnnotationData
 */
package net.mcreator.gallifreyworlds;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.BiConsumer;
import java.util.function.Function;
import java.util.function.Supplier;
import net.mcreator.gallifreyworlds.GallifreyWorldsMod;
import net.minecraft.block.Block;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.entity.EntityType;
import net.minecraft.item.Item;
import net.minecraft.network.PacketBuffer;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundEvent;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.fml.ModList;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.server.FMLServerStartingEvent;
import net.minecraftforge.fml.network.NetworkEvent;
import net.minecraftforge.forgespi.language.ModFileScanData;

public class GallifreyWorldsModElements {
    public final List<ModElement> elements = new ArrayList<ModElement>();
    public final List<Supplier<Block>> blocks = new ArrayList<Supplier<Block>>();
    public final List<Supplier<Item>> items = new ArrayList<Supplier<Item>>();
    public final List<Supplier<EntityType<?>>> entities = new ArrayList();
    public final List<Supplier<Enchantment>> enchantments = new ArrayList<Supplier<Enchantment>>();
    public static Map<ResourceLocation, SoundEvent> sounds = new HashMap<ResourceLocation, SoundEvent>();
    private int messageID = 0;

    public GallifreyWorldsModElements() {
        try {
            ModFileScanData modFileInfo = ModList.get().getModFileById("gallifrey_worlds").getFile().getScanResult();
            Set annotations = modFileInfo.getAnnotations();
            for (ModFileScanData.AnnotationData annotationData : annotations) {
                Class<?> clazz;
                if (!annotationData.getAnnotationType().getClassName().equals(ModElement.Tag.class.getName()) || (clazz = Class.forName(annotationData.getClassType().getClassName())).getSuperclass() != ModElement.class) continue;
                this.elements.add((ModElement)clazz.getConstructor(this.getClass()).newInstance(this));
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        Collections.sort(this.elements);
        this.elements.forEach(ModElement::initElements);
    }

    public void registerSounds(RegistryEvent.Register<SoundEvent> event) {
        for (Map.Entry<ResourceLocation, SoundEvent> sound : sounds.entrySet()) {
            event.getRegistry().register(sound.getValue().setRegistryName(sound.getKey()));
        }
    }

    public <T> void addNetworkMessage(Class<T> messageType, BiConsumer<T, PacketBuffer> encoder, Function<PacketBuffer, T> decoder, BiConsumer<T, Supplier<NetworkEvent.Context>> messageConsumer) {
        GallifreyWorldsMod.PACKET_HANDLER.registerMessage(this.messageID, messageType, encoder, decoder, messageConsumer);
        ++this.messageID;
    }

    public List<ModElement> getElements() {
        return this.elements;
    }

    public List<Supplier<Block>> getBlocks() {
        return this.blocks;
    }

    public List<Supplier<Item>> getItems() {
        return this.items;
    }

    public List<Supplier<EntityType<?>>> getEntities() {
        return this.entities;
    }

    public List<Supplier<Enchantment>> getEnchantments() {
        return this.enchantments;
    }

    public static class ModElement
    implements Comparable<ModElement> {
        protected final GallifreyWorldsModElements elements;
        protected final int sortid;

        public ModElement(GallifreyWorldsModElements elements, int sortid) {
            this.elements = elements;
            this.sortid = sortid;
        }

        public void initElements() {
        }

        public void init(FMLCommonSetupEvent event) {
        }

        public void serverLoad(FMLServerStartingEvent event) {
        }

        @OnlyIn(value=Dist.CLIENT)
        public void clientLoad(FMLClientSetupEvent event) {
        }

        @Override
        public int compareTo(ModElement other) {
            return this.sortid - other.sortid;
        }

        @Retention(value=RetentionPolicy.RUNTIME)
        public static @interface Tag {
        }
    }
}

